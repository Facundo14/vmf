#!/bin/bash
# vmf_example_demo.sh
# Script de demostración de vmf

echo "🚀 Demostración de vmf (Version Manager Flavors)"
echo "================================================="
echo ""

echo "📂 Estructura inicial del proyecto Flutter:"
echo "flutter_project/"
echo "├── pubspec.yaml"
echo "└── android/app/"
echo "    ├── build.gradle.kts  (sin flavors)"
echo "    └── src/main/"
echo "        └── AndroidManifest.xml"
echo ""

echo "💡 Paso 1: Instalar vmf"
echo "$ dart pub global activate vmf"
echo ""

echo "🔧 Paso 2: Inicializar flavors"
echo "$ cd flutter_project"
echo "$ vmf init"
echo ""
echo "Respuestas del ejemplo:"
echo "¿Cuántos flavors? 2"
echo "Flavor #1: dev"
echo "App name: MyApp Dev"
echo "ApplicationId: com.example.myapp.dev"
echo "Password: devpass123"
echo "Alias: dev_key"
echo ""
echo "Flavor #2: prod"  
echo "App name: MyApp"
echo "ApplicationId: com.example.myapp"
echo "Password: prodpass456"
echo "Alias: prod_key"
echo ""

echo "✅ Resultado después de vmf init:"
echo "flutter_project/"
echo "├── pubspec.yaml"
echo "├── vmf_config.json           ← ✨ Nuevo"
echo "└── android/app/"
echo "    ├── build.gradle.kts      ← ✅ Actualizado con flavors"
echo "    ├── build.gradle.kts.bak  ← 🔒 Backup automático"
echo "    ├── dev_keystore.jks      ← ✨ Generado automáticamente"
echo "    ├── prod_keystore.jks     ← ✨ Generado automáticamente"
echo "    └── src/main/"
echo "        └── AndroidManifest.xml ← ✅ Usa @string/app_name"
echo ""

echo "🏗️ Paso 3: Build para diferentes flavors"
echo "$ vmf build dev    # Build de desarrollo"
echo "$ vmf build prod   # Build de producción"
echo ""

echo "📈 Paso 4: Gestión de versiones"
echo "$ vmf version      # 1.0.0+1 → 1.0.1+2"
echo "$ vmf version minor # 1.0.1+2 → 1.1.0+3"
echo "$ vmf version major # 1.1.0+3 → 2.0.0+4"
echo ""

echo "🎯 Beneficios logrados:"
echo "✅ Configuración Android automatizada"
echo "✅ Keystores seguros generados automáticamente"
echo "✅ Sin duplicados en build.gradle"
echo "✅ Backup automático de archivos"
echo "✅ Gestión semántica de versiones"
echo "✅ Builds optimizados con flags de producción"
echo ""

echo "🎉 ¡Tu proyecto Flutter tiene flavors profesionales!"
echo "Ahora puedes desarrollar con 'dev' y publicar con 'prod' fácilmente."
